swagger: "2.0"
info:
  version: 0.0.1-SNAPSHOT
  title: Pet Clinic
host: localhost:8080
tags:
  - name: Owner Controller
    description: Controller for Owner resource.
  - name: Pet Controller
    description: Controller for Pet resource.
  - name: Type Controller
    description: Controller for Type resource.
paths:
  /clinic/owner:
    get:
      tags:
        - Owner Controller
      summary: Fetch all owners.
      operationId: fetchAllUsingGET
      produces:
        - application/json
      responses:
        "200":
          description: Owners are returned.
          schema:
            $ref: '#/definitions/OwnerOutputDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ExceptionOutputDto'
    post:
      tags:
        - Owner Controller
      summary: Save owner.
      operationId: saveUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ownerInputDto
          description: ownerInputDto
          required: true
          schema:
            $ref: '#/definitions/OwnerInputDto'
      responses:
        "200":
          description: OK
          schema:
            type: object
        "201":
          description: Owner saved.
        "400":
          description: Input validation error
        "500":
          description: Internal Server Error
  /clinic/owner/{id}:
    get:
      tags:
        - Owner Controller
      summary: Fetch owner by id.
      operationId: findByIdUsingGET
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Owner is found
          schema:
            $ref: '#/definitions/OwnerOutputDto'
        "404":
          description: Owner is not found.
          schema:
            $ref: '#/definitions/ExceptionOutputDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ExceptionOutputDto'
  /clinic/pet:
    post:
      tags:
        - Pet Controller
      summary: Save pet.
      operationId: saveUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: petInputDto
          description: petInputDto
          required: true
          schema:
            $ref: '#/definitions/PetInputDto'
      responses:
        "200":
          description: OK
          schema:
            type: object
        "201":
          description: Pet saved.
        "400":
          description: Input validation error
        "404":
          description: Associations for pet to save were missing.
        "409":
          description: Pet already exists.
        "500":
          description: Internal Server Error
  /clinic/pet/{id}:
    get:
      tags:
        - Pet Controller
      summary: Fetch pet by id.
      operationId: findByIdUsingGET_1
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Pet is found
          schema:
            $ref: '#/definitions/PetOutputDto'
        "404":
          description: Pet is not found.
          schema:
            $ref: '#/definitions/ExceptionOutputDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ExceptionOutputDto'
  /clinic/type:
    get:
      tags:
        - Type Controller
      summary: Fetch all types.
      operationId: fetchAllUsingGET_1
      produces:
        - application/json
      responses:
        "200":
          description: Types are returned.
          schema:
            $ref: '#/definitions/TypeOutputDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ExceptionOutputDto'
    post:
      tags:
        - Type Controller
      summary: Save type.
      operationId: saveUsingPOST_2
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: typeInputDto
          description: typeInputDto
          required: true
          schema:
            $ref: '#/definitions/TypeInputDto'
      responses:
        "200":
          description: OK
          schema:
            type: object
        "201":
          description: Type saved.
        "400":
          description: Input validation error
        "409":
          description: Type already exists
        "500":
          description: Internal Server Error
  /clinic/type/{id}:
    get:
      tags:
        - Type Controller
      summary: Fetch type by id.
      operationId: findByIdUsingGET_2
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Type is found
          schema:
            $ref: '#/definitions/TypeOutputDto'
        "404":
          description: Type is not found.
          schema:
            $ref: '#/definitions/ExceptionOutputDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ExceptionOutputDto'
definitions:
  ExceptionOutputDto:
    type: object
    properties:
      error:
        type: string
      invalidFields:
        type: array
        items:
          $ref: '#/definitions/InvalidFieldOutputDto'
      statusCode:
        type: integer
        format: int32
    title: ExceptionOutputDto
  InvalidFieldOutputDto:
    type: object
    properties:
      errorMessage:
        type: string
      fieldName:
        type: string
    title: InvalidFieldOutputDto
  NameOutputDto:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
    title: NameOutputDto
  NameOwnerOutputDto:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
    title: NameOwnerOutputDto
  OwnerDto:
    type: object
    properties:
      address:
        type: string
      id:
        type: integer
        format: int64
      name:
        $ref: '#/definitions/NameOutputDto'
      telephone:
        type: string
    title: OwnerDto
  OwnerInputDto:
    type: object
    required:
      - address
      - firstName
      - lastName
      - telephone
    properties:
      address:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      telephone:
        type: string
        pattern: ((?:\+?3|0)6)[-(]?(\d{1,2})[-)]?(\d{3})-?(\d{3,4})
    title: OwnerInputDto
  OwnerOutputDto:
    type: object
    properties:
      ownerAddress:
        type: string
      ownerId:
        type: integer
        format: int64
      ownerName:
        $ref: '#/definitions/NameOwnerOutputDto'
      ownerPets:
        type: array
        items:
          $ref: '#/definitions/PetOwnerOutputDto'
      ownerTelephone:
        type: string
    title: OwnerOutputDto
  PetInputDto:
    type: object
    required:
      - name
      - typeName
    properties:
      birthDate:
        type: string
        format: date
      name:
        type: string
      ownerId:
        type: integer
        format: int64
      typeName:
        type: string
    title: PetInputDto
  PetOutputDto:
    type: object
    properties:
      petBirthDate:
        type: string
        format: date
      petId:
        type: integer
        format: int64
      petName:
        type: string
      petOwner:
        $ref: '#/definitions/OwnerDto'
      petType:
        $ref: '#/definitions/TypeOutputDto'
    title: PetOutputDto
  PetOwnerOutputDto:
    type: object
    properties:
      birthDate:
        type: string
        format: date
      id:
        type: integer
        format: int64
      name:
        type: string
      type:
        $ref: '#/definitions/TypeOwnerOutputDto'
    title: PetOwnerOutputDto
  TypeInputDto:
    type: object
    required:
      - name
    properties:
      name:
        type: string
    title: TypeInputDto
  TypeOutputDto:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    title: TypeOutputDto
  TypeOwnerOutputDto:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    title: TypeOwnerOutputDto